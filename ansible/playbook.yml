---
- name: Setup n8n on EC2 Ubuntu com .env e swap
  hosts: all
  become: true

  tasks:
    # === SWAP CONFIGURATION ===
    - name: Criar arquivo de swap (2GB)
      command: fallocate -l 2G /swapfile
      args:
        creates: /swapfile

    - name: Definir permissões corretas para o swap
      file:
        path: /swapfile
        owner: root
        group: root
        mode: "0600"

    - name: Criar sistema de swap
      command: mkswap /swapfile
      when: ansible_swaptotal_mb == 0

    - name: Ativar swap
      command: swapon /swapfile
      when: ansible_swaptotal_mb == 0

    - name: Adicionar swap ao fstab
      mount:
        name: swap
        src: /swapfile
        fstype: swap
        opts: sw
        state: present

    - name: Ajustar swappiness
      sysctl:
        name: vm.swappiness
        value: 10
        state: present
        sysctl_set: yes
        reload: yes

    # === NODEJS CONFIGURATION ===

    - name: Aguardar liberação do dpkg lock
      shell: |
        while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
          echo "Aguardando liberação do dpkg lock..."
          sleep 3
        done
      args:
        executable: /bin/bash

    - name: Verificar se o repositório NodeSource já está configurado
      command: grep -q "deb.nodesource.com" /etc/apt/sources.list /etc/apt/sources.list.d/*
      register: nodesource_repo_check
      ignore_errors: true

    - name: Adicionar repositório Node.js 20.x (NodeSource)
      shell: curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
      args:
        executable: /bin/bash
      when: nodesource_repo_check is failed

    - name: Verificar versão do Node.js
      command: node -v
      register: node_version
      ignore_errors: true

    - name: Instalar Node.js 20.x e npm
      apt:
        name: nodejs
        state: present
        update_cache: yes
      when: node_version is failed

    - name: Verificar se o PM2 já está instalado
      command: "pm2 -v"
      register: pm2_version
      ignore_errors: true

    - name: Instalar PM2 globalmente
      npm:
        name: pm2
        global: yes
      become: true
      when: pm2_version is failed

    - name: Verificar se o n8n já está instalado
      command: "n8n -v"
      register: n8n_version
      ignore_errors: true

    - name: Instalar n8n globalmente
      shell: "sudo npm install -g n8n"
      args:
        executable: /bin/bash
      when: n8n_version is failed

    - name: Copiar arquivo .env para o servidor
      copy:
        src: ./files/.env
        dest: /home/ubuntu/.env
        owner: ubuntu
        group: ubuntu
        mode: "0600"

    - name: Exportar variáveis do .env no bashrc
      lineinfile:
        path: /home/ubuntu/.bashrc
        line: 'export $(grep -v "^#" /home/ubuntu/.env | xargs)'
        insertafter: EOF

    - name: Copiar credenciais do Google
      copy:
        src: ./files/google-creds.json
        dest: /home/ubuntu/google-creds.json
        owner: ubuntu
        group: ubuntu
        mode: "0600"

    - name: Copiar workflow de sincronização de calendário
      copy:
        src: ./files/calendar-sync-test.json
        dest: /home/ubuntu/calendar-sync-test.json
        owner: ubuntu
        group: ubuntu
        mode: "0600"

    - name: Copiar ecosystem.config.js
      copy:
        src: ./files/ecosystem.config.js
        dest: /home/ubuntu/ecosystem.config.js
        owner: ubuntu
        group: ubuntu
        mode: "0644"

    - name: Importar credencial do Google no n8n
      shell: |
        export $(grep -v '^#' /home/ubuntu/.env | xargs)
        n8n import:credentials --input=/home/ubuntu/google-creds.json
      args:
        executable: /bin/bash

    - name: Importar workflow de exemplo no n8n
      shell: |
        export $(grep -v '^#' /home/ubuntu/.env | xargs)
        n8n import:workflow --input=/home/ubuntu/Calendar_Sync_Example.json
      args:
        executable: /bin/bash

    - name: Instalar dotenv localmente na home do usuário
      shell: |
        cd /home/ubuntu && npm install dotenv
      args:
        executable: /bin/bash
      become: false
      environment:
        HOME: /home/ubuntu

    - name: Iniciando o n8n com PM2 e ecosystem.config.js
      debug:
        msg: "Iniciando n8n via PM2 com ecosystem.config.js..."

    - name: Iniciar o n8n com PM2 e ecosystem.config.js
      shell: |
        echo "→ Rodando PM2 start..."
        pm2 start /home/ubuntu/ecosystem.config.js
        echo "→ Salvando configuração com pm2 save..."
        pm2 save
      args:
        executable: /bin/bash
      register: pm2_result

    - name: Resultado do PM2 start
      debug:
        var: pm2_result.stdout_lines

    - name: Importar credencial do Google no n8n
      shell: |
        export $(grep -v '^#' /home/ubuntu/.env | xargs)
        n8n import:credentials --input=/home/ubuntu/google-creds.json
      args:
        executable: /bin/bash

    - name: Importar workflow de exemplo no n8n
      shell: |
        export $(grep -v '^#' /home/ubuntu/.env | xargs)
        n8n import:workflow --input=/home/ubuntu/calendar-sync-test.json
      args:
        executable: /bin/bash
